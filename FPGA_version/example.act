

/*
 * Basic setup
 */
template<pint N;    // I have N neighbors
         pint w[N]; // Neighbor i has weight w[i]
         pint A, B; // A bits for integer part, B bits for fractional part
         pint NITER // number of iterations
        >
defproc msg_element (chan?(int<A+B>) in[N];   // input from neighbors
                     chan!(int<A+B>) out[N];  // output to neighbors
                     chan?(int<A+B>) L;       // linear chain to generate
                     chan!(int<A+B>) R        // final output
                    )
{
  int v;  // my local state
  int<A+B> tmp;
  int<A+B> wt;
  int i, k;

  chp {
     v := 0;
     i := 0;
    *[ i < NITER -> 
        k := 0;
        (, j : N : out[j]!v ), 
        *[ k < N -> [([] l : N : k = l -> in[l]?tmp, wt:=w[l])]; 
                    v := v + tmp*wt
        ];
        i := i + 1
     ];
     R!v;
    *[ L?v; R!v ]
  }

}

msg_element<2,{5,6},2,4,10> m;
